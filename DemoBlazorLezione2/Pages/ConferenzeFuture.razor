@page "/conferenzefuture"
@using Demo.Core.Conferenze
@using DemoBlazorLezione2.Core.Conferenze
@using DemoBlazorLezione2.UI.Library

@inject IServizioConferenze servizioConferenze
@inject IMarketing servizioMarketing

@if (caricamento)
{
<div class="d-flex justify-content-center">
    <div class="spinner-border" role="status">
        
    </div>
</div>
} else {

    @if (conferenza is not null)
    {
        <DettaglioConferenza Conferenza="conferenza"
                             OnAnnulla="Annulla" OnSalva="Salva"></DettaglioConferenza>
    }
    else
    {
        <button class="btn btn-warning" @onclick="AggiungiConferenza">Aggiungi Conferenza</button>
        <ListaConferenze OnConferenzaCancellata="EliminaConferenzaFutura"
                         OnConferenzaModificata="ModificaConferenza"
                         Conferenze="@conferenze" Titolo="@titolo" />
    }


}



@code {

    private List<Conferenza>? conferenze = new();
    private Conferenza? conferenza;
    private bool caricamento = false;

    private string titolo = "xxxx";

    protected override void OnInitialized()
    {
        conferenze = servizioConferenze.EstraiConferenzeFuture();
        titolo = servizioMarketing.EstraiTitoloConferenza();
    }

    private void EliminaConferenzaFutura(Conferenza conferenza)
    {
        servizioConferenze.CancellaConferenzaFutura(conferenza.Id);
    }

    private void ModificaConferenza(Conferenza conferenzaModificata)
    {
        this.conferenza = conferenzaModificata;
    }


    private void AggiungiConferenza()
    {
        conferenza = new Conferenza();
    }

    private void Annulla()
    {
        conferenza = null;
    }

    private async Task Salva(Conferenza conferenzaModificata){
        caricamento = true;
        if(conferenzaModificata.Id == 0){
            await servizioConferenze.AggiungiConferenzaAsync(conferenzaModificata);
        } else {
            await servizioConferenze.ModificaConferenzaAsync(conferenzaModificata);
        }
        caricamento = false;
        conferenza = null;
        conferenze = await servizioConferenze.EstraiConferenzeFutureAsync();
    }


}
